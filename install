#!/bin/bash

# Unattended installation of Command Line Tools
# Found on apple.stackexchange.com at https://apple.stackexchange.com/questions/107307/how-can-i-install-the-command-line-tools-completely-from-the-command-line/195963#195963
# Homebrew uses a similar technique https://github.com/Homebrew/install/blob/878b5a18b89ff73f2f221392ecaabd03c1e69c3f/install#L297

xcode-select -p >&/dev/null
if [[ $? -ne 0 ]]; then
  touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress
  CLT=$( softwareupdate -l |
    grep "\*.*Command Line Tools" |
    head -n 1 |
    awk -F ":" '{print $2}' |
    sed -e 's/^ *//' |
    tr -d '\n' )
  echo "Installing '${CLT}'"
  softwareupdate -i "$CLT" --verbose
  rm /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress
else
  echo "Command Line Tools are installed at $(xcode-select -p)"
fi

# Installation of nix
# TODO: Make this unattended. Expect? Sudo?

type nix >&/dev/null
if [[ $? -ne 0 ]]; then
  echo "Installing Nix"
  sh <(curl -L https://nixos.org/nix/install) --daemon --darwin-use-unencrypted-nix-store-volume
else
  echo "Nix is already installed. Update from within Nix instead."
fi

source /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh

# Installation of nix-darwin
# TODO: Make this unattended. Expect? Sudo?

type darwin-rebuild >&/dev/null
if [[ $? -ne 0 ]]; then
  nix-build https://github.com/LnL7/nix-darwin/archive/master.tar.gz -A installer

  # nix-darwin will control nix.conf
  sudo mv /etc/nix/nix.conf /etc/nix/nix.conf.backup-before-nix-darwin

  ./result/bin/darwin-installer
  rm -rf ./result
fi

# Checkout the repository so we can start to rebuild the machine
# Yes, assume we're doing this from a blank machine for the moment
CLONE_TARGET="${HOME}/.config"
if [ ! -d $"{CLONE_TARGET}" ]; then
  git clone https://github.com/TheOptimist/mrs-beeton.git $CLONE_TARGET
fi

for filename in shells bashrc zshrc; do
  filepath="/etc/${filename}"
  if [ -f $filepath ] && [ ! -L $filepath ]; then
    echo "Moving ${filepath} to allow nix-darwin to manage"
    sudo mv "$filepath" "${filepath}.backup-before-nix-darwin"
  fi
done

# TODO: This doesn't seem to work at the moment. Work it out later.
echo "$USER	ALL=(ALL:ALL)	NOPASSWD:	/run/current-system/sw/bin/darwin-rebuild" |
  sudo tee /etc/sudoers.d/nix-darwin > /dev/null

if [ "${HOME}/.nixpkgs/darwin-configuration.nix" ]; then
  rm $HOME/.nixpkgs/darwin-configuration.nix
fi

export NIX_PATH=$HOME/.nix-defexpr/channels:$NIX_PATH

darwin-rebuild switch -I "darwin-config=$HOME/.config/nix/darwin/configuration.nix"
